<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>